<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>